<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>